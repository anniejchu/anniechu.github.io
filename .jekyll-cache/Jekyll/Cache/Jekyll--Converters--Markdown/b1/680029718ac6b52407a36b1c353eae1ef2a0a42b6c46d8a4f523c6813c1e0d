I"l6<!-- ## Text2FX -->
<p align="center"> <b><font size="5">Text2FX: Harnessing CLAP Embeddings for Text-Guided Audio Effects</font></b> </p>
<p align="center"><font size="3">Annie Chu, Patrick O'Reilly, Julia Barnett, Bryan Pardo</font></p>
<p align="center"><font size="3">Northwestern University</font></p>

<!-- #### Key Goal
How can we apply audio FX (e.g., EQ, reverb, etc) with any natural language prompt (e.g., make this 'warm and cozy')? -->

<div align="center">
  <a href="https://arxiv.org/abs/2409.18847" target="_blank" style="
    display: inline-block;
    padding: 10px 20px;
    font-size: 16px;
    color: white;
    background-color: #007bff;
    text-decoration: none;
    border-radius: 5px;
    border: none;
  ">
    View on ArXiv
  </a>
</div>

<h4 id="abstract">Abstract</h4>
<p><strong>tl;dr: How can we apply audio effects (e.g., EQ, reverb, etc) with any natural language prompt (e.g., make this ‘warm and cozy’)?</strong></p>

<p>This work introduces Text2FX, a method that leverages CLAP embeddings and differentiable digital signal processing to control audio effects, such as equalization and reverberation, using open-vocabulary natural language prompts (e.g., “make this sound in-your-face and bold”). Text2FX operates without retraining any models, relying instead on single-instance optimization within the existing embedding space. We show that CLAP encodes valuable information for controlling audio effects and propose two optimization approaches using CLAP to map text to audio effect parameters. While we demonstrate with CLAP, this approach is applicable to any shared text-audio embedding space. Similarly, while we demonstrate with equalization and reverberation, any differentiable audio effect may be controlled. We conduct a listener study with diverse text prompts and source audio to evaluate the quality and alignment of these methods with human perception.</p>

<!-- <style>
  table {
    width: 100%;
  }
  table th, table td {
    text-align: left;
    vertical-align: middle;
  }
  table th:first-child, table td:first-child {
    width: 20%; /* Adjust to make the "Word" column smaller */
  }
  audio {
    width: 200px; /* Set a smaller width for audio controls */
    height: 30px; /* Optional: Adjust height for compactness */
  }
</style> -->

<p>Share</p>

<p>You said:
I have a jekyll website and I have a list of input and output audio examples, and want to lay them out in a table where it does | word | input audio | output audio |. Write html on a markdown table
ChatGPT said:
ChatGPT
Here’s an example of how you can create a Markdown table for your Jekyll website that includes a column for words, input audio, and output audio. Markdown tables support HTML within cells, so you can embed audio elements:</p>

<p>markdown
Copy code
| Word       | Input Audio                           | Output Audio                          |
|————|—————————————|—————————————|
| Example 1  | <audio controls=""><source src="/path/to/input1.mp3" type="audio/mpeg" />Your browser does not support the audio element.</audio> | <audio controls=""><source src="/path/to/output1.mp3" type="audio/mpeg" />Your browser does not support the audio element.</audio> |
| Example 2  | <audio controls=""><source src="/path/to/input2.mp3" type="audio/mpeg" />Your browser does not support the audio element.</audio> | <audio controls=""><source src="/path/to/output2.mp3" type="audio/mpeg" />Your browser does not support the audio element.</audio> |
| Example 3  | <audio controls=""><source src="/path/to/input3.mp3" type="audio/mpeg" />Your browser does not support the audio element.</audio> | <audio controls=""><source src="/path/to/output3.mp3" type="audio/mpeg" />Your browser does not support the audio element.</audio> |
Key Details:
Markdown Syntax: The table headers and dividers (| and —) define the structure.
HTML Audio Elements: The <audio> tags allow embedding audio within the table cells. Replace /path/to/input1.mp3 and /path/to/output1.mp3 with the actual paths to your audio files.
Browser Compatibility: Add fallback text ("Your browser does not support the audio element.") for users with unsupported browsers.
This will display a clean table with playable audio controls in each respective column.</audio></p>

<p>You said:
Given this, please make the word column smaller and the audio widgets to be smaller</p>
<h4 id="examples">Examples</h4>

<p>| Word       | Input Audio                           | Output Audio                          |
|————|—————————————|—————————————|
| bright     | <audio controls=""><source src="/research/text2fx/audio/bright_guitar/guitar__ref.wav" type="audio/mpeg" />Your browser does not support the audio element.</audio> | <audio controls=""><source src="/research/text2fx/audio/bright_guitar/guitar_600.wav" type="audio/mpeg" />Your browser does not support the audio element.</audio> |
| Example 2  | <audio controls=""><source src="/path/to/input2.mp3" type="audio/mpeg" />Your browser does not support the audio element.</audio> | <audio controls=""><source src="/path/to/output2.mp3" type="audio/mpeg" />Your browser does not support the audio element.</audio> |
| Example 3  | <audio controls=""><source src="/path/to/input3.mp3" type="audio/mpeg" />Your browser does not support the audio element.</audio> | <audio controls=""><source src="/path/to/output3.mp3" type="audio/mpeg" />Your browser does not support the audio element.</audio> |
ChatGPT said:
ChatGPT
To adjust the layout as requested, you can use inline CSS within the Markdown file to style the table, making the “Word” column smaller and the audio widgets more compact. Here’s the updated Markdown with inline HTML:</p>

<p>markdown
Copy code</p>
<style>
  table {
    width: 100%;
  }
  table th, table td {
    text-align: left;
    vertical-align: middle;
  }
  table th:first-child, table td:first-child {
    width: 10%; /* Adjust to make the "Word" column smaller */
  }
  audio {
    width: 150px; /* Set a smaller width for audio controls */
    height: 30px; /* Optional: Adjust height for compactness */
  }
</style>

<h4 id="examples-1">Examples</h4>

<p>| Word       | Input Audio                           | Output Audio                          |
|————|—————————————|—————————————|
| bright     | <audio controls=""><source src="/research/text2fx/audio/bright_guitar/guitar__ref.wav" type="audio/mpeg" />Your browser does not support the audio element.</audio> | <audio controls=""><source src="/research/text2fx/audio/bright_guitar/guitar_600.wav" type="audio/mpeg" />Your browser does not support the audio element.</audio> |
| Example 2  | <audio controls=""><source src="/path/to/input2.mp3" type="audio/mpeg" />Your browser does not support the audio element.</audio> | <audio controls=""><source src="/path/to/output2.mp3" type="audio/mpeg" />Your browser does not support the audio element.</audio> |
| Example 3  | <audio controls=""><source src="/path/to/input3.mp3" type="audio/mpeg" />Your browser does not support the audio element.</audio> | <audio controls=""><source src="/path/to/output3.mp3" type="audio/mpeg" />Your browser does not support the audio element.</audio> |
Changes Made:
CSS for the Table:</p>

<p>The width of the first column (Word) is reduced using width: 10%; to make it smaller.
The audio tag’s width is set to 150px for compact playback controls.
Compact Audio Controls:</p>

<p>Reduced the width and optionally adjusted the height for a cleaner layout.
Integration:</p>

<p>Embedded the CSS <style> block directly into the Markdown to ensure it applies without requiring external stylesheet modifications.
This solution works seamlessly in Jekyll if your theme allows inline CSS, ensuring the table layout meets your requirements.</style></p>

<p>You said:
can you add 2 other columns in between Word and input audio for named “word type” and “audio sample name”
ChatGPT said:
ChatGPT
Here’s the updated Markdown table with the additional columns “Word Type” and “Audio Sample Name” between “Word” and “Input Audio.” The new columns include placeholders for demonstration:</p>

<p>markdown
Copy code</p>
<style>
  table {
    width: 100%;
  }
  table th, table td {
    text-align: left;
    vertical-align: middle;
  }
  table th:first-child, table td:first-child {
    width: 10%; /* Adjust to make the "Word" column smaller */
  }
  audio {
    width: 150px; /* Set a smaller width for audio controls */
    height: 30px; /* Optional: Adjust height for compactness */
  }
</style>

<h4 id="examples-2">Examples</h4>

<p>| Word       | Word Type      | Audio Sample Name    | Input Audio                           | Output Audio                          |
|————|—————-|———————-|—————————————|—————————————|
| bright     | Adjective      | bright_guitar_ref    | <audio controls=""><source src="/research/text2fx/audio/bright_guitar/guitar__ref.wav" type="audio/mpeg" />Your browser does not support the audio element.</audio> | <audio controls=""><source src="/research/text2fx/audio/bright_guitar/guitar_600.wav" type="audio/mpeg" />Your browser does not support the audio element.</audio> |
| Example 2  | Noun           | example_audio_ref2   | <audio controls=""><source src="/path/to/input2.mp3" type="audio/mpeg" />Your browser does not support the audio element.</audio> | <audio controls=""><source src="/path/to/output2.mp3" type="audio/mpeg" />Your browser does not support the audio element.</audio> |
| Example 3  | Verb           | example_audio_ref3   | <audio controls=""><source src="/path/to/input3.mp3" type="audio/mpeg" />Your browser does not support the audio element.</audio> | <audio controls=""><source src="/path/to/output3.mp3" type="audio/mpeg" />Your browser does not support the audio element.</audio> |
Explanation of Changes:
New Columns:</p>

<p>Word Type: Describes the type of the word (e.g., Adjective, Noun, Verb).
Audio Sample Name: Provides a name or identifier for the audio sample.
Sample Data:</p>

<p>Populated the new columns with placeholder examples (“Adjective”, “bright_guitar_ref”, etc.). Replace these with your actual data.
Styling:</p>

<p>Adjusted the audio size for compact controls.
Kept the “Word” column width smaller as before.
This layout now includes all requested columns while keeping the structure clean and usable.</p>

<p>You said:
How adapt the column size of word type and audio sample name too</p>

<p>2/2</p>

<p>ChatGPT said:
ChatGPT
To adjust the column sizes of Word Type and Audio Sample Name for better alignment and usability, we can set specific widths for those columns as well. Here’s the updated Markdown with CSS styles for column width adjustments:</p>

<p>markdown
Copy code</p>
<style>
  table {
    width: 100%;
    border-collapse: collapse; /* Optional: For cleaner table appearance */
  }
  table th, table td {
    text-align: left;
    vertical-align: middle;
    padding: 8px; /* Optional: Adds spacing */
  }
  table th:first-child, table td:first-child {
    width: 10%; /* Word column */
  }
  table th:nth-child(2), table td:nth-child(2) {
    width: 15%; /* Word Type column */
  }
  table th:nth-child(3), table td:nth-child(3) {
    width: 20%; /* Audio Sample Name column */
  }
  table th:nth-child(4), table td:nth-child(4),
  table th:nth-child(5), table td:nth-child(5) {
    width: 27.5%; /* Remaining space shared between Input and Output Audio */
  }
  audio {
    width: 150px; /* Compact audio controls */
    height: 30px; /* Optional: Adjust height for better compactness */
  }
</style>

<h4 id="examples-3">Examples</h4>

<table>
  <thead>
    <tr>
      <th>Word</th>
      <th>Word Type</th>
      <th>Audio Sample Name</th>
      <th>Input Audio</th>
      <th>Output Audio</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>bright</td>
      <td>Adjective</td>
      <td>bright_guitar_ref</td>
      <td><audio controls=""><source src="/research/text2fx/audio/bright_guitar/guitar__ref.wav" type="audio/mpeg" />Your browser does not support the audio element.</audio></td>
      <td><audio controls=""><source src="/research/text2fx/audio/bright_guitar/guitar_600.wav" type="audio/mpeg" />Your browser does not support the audio element.</audio></td>
    </tr>
    <tr>
      <td>Example 2</td>
      <td>Noun</td>
      <td>example_audio_ref2</td>
      <td><audio controls=""><source src="/path/to/input2.mp3" type="audio/mpeg" />Your browser does not support the audio element.</audio></td>
      <td><audio controls=""><source src="/path/to/output2.mp3" type="audio/mpeg" />Your browser does not support the audio element.</audio></td>
    </tr>
    <tr>
      <td>Example 3</td>
      <td>Verb</td>
      <td>example_audio_ref3</td>
      <td><audio controls=""><source src="/path/to/input3.mp3" type="audio/mpeg" />Your browser does not support the audio element.</audio></td>
      <td><audio controls=""><source src="/path/to/output3.mp3" type="audio/mpeg" />Your browser does not support the audio element.</audio></td>
    </tr>
  </tbody>
</table>

<style>
    img {
    width: 100%; /* Set to 100% of the container width */
    max-width: 500px; /* Set the maximum width of the image */
    height: auto; /* Maintain the aspect ratio */
    margin-bottom: 1px; /* Add space between the image and audio widget */
    }
    video {
    width: 100%; /* Set to 100% of the container width */
    max-width: 800px8; /* Set the maximum width of the video */
    height: auto; /* Maintain the aspect ratio */
    margin-bottom: 1px; /* Add space between the video and audio widget */
    display: block; /* Center the video */
    margin: auto;
    }
</style>

:ET